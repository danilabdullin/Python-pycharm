class Warehouse:

    def __init__(self, name, price, quantity, number_of_lists, *args):
        self.name = name
        self.price = price
        self.quantity = quantity
        self.numb = number_of_lists
        self.my_store_full = []
        self.my_store = []
        self.my_unit = {'Equipment': self.name, 'Price': self.price, 'Quantity': self.quantity}

    def __str__(self):
        return f'{self.name} price: {self.price} quantity: {self.quantity}'

    def add_list(self):
        try:
            unit = input(f'Enter the name of equipment ')
            unit_p = int(input(f'Enter the price '))
            unit_q = int(input(f'Enter the quantity '))
            unique = {'Equipment': unit, 'Price': unit_p, 'Quantity': unit_q}
            self.my_unit.update(unique)
            self.my_store.append(self.my_unit)
            print(f'Current list -\n {self.my_store}')
        except:
            return f'Error with the values'

        print(f'Press Q to stop or Enter to continue')
        q = input(f'---> ')
        if q == 'Q' or q == 'q':
            self.my_store_full.append(self.my_store)
            print(f'Warehouse list: \n {self.my_store_full}')
        else:
            return Warehouse.add_list(self)


class Printer(Warehouse):
    def to_print(self):
        return f'to print smth {self.numb} times'


class Scanner(Warehouse):
    def to_scan(self):
        return f'to scan smth {self.numb} times'


class Copier(Warehouse):
    def to_copy(self):
        return f'to copy smth  {self.numb} times'


unit_1 = Printer('Canon', 15000, 100, 10)
print(unit_1.add_list())
print(unit_1.to_print())

